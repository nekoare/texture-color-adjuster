name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Get package version from Packages directory
        id: version
        run: |
          if [ -f "Packages/dev.nekoare.tex-col-adjuster/package.json" ]; then
            VERSION=$(jq -r '.version' Packages/dev.nekoare.tex-col-adjuster/package.json)
            echo "Found version in Packages: $VERSION"
          else
            VERSION="1.2"
            echo "Using fallback version: $VERSION"
          fi
          # 2セグメント(例: 1.2)は 1.2.0 に正規化
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+$ ]]; then
            VERSION="${VERSION}.0"
            echo "Normalized to SemVer: $VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      - name: Create package ZIP file
        run: |
          echo "Preparing package.json for release (normalize SemVer, strip vpmDependencies)"
          PKG_DIR="Packages/dev.nekoare.tex-col-adjuster"
          PKG_JSON="$PKG_DIR/package.json"
          if [ -f "$PKG_JSON" ]; then
            tmp=$(mktemp)
            jq '
              # normalize 2-segment version (e.g., 1.2 -> 1.2.0)
              .version |= (if test("^[0-9]+\\.[0-9]+$") then . + ".0" else . end) |
              # ensure author fields exist
              (.author //= {}) |
              (.author.name //= "nekoare") |
              (.author.url //= "https://github.com/nekoare") |
              # remove runtime dependencies to avoid unresolved packages in general Unity projects
              (.vpmDependencies = {})
            ' "$PKG_JSON" > "$tmp" && mv "$tmp" "$PKG_JSON"
            echo "package.json normalized for release"
          else
            echo "WARN: $PKG_JSON not found; skipping normalization"
          fi

          echo "Creating ZIP from $PKG_DIR"
          cd "$PKG_DIR"
          zip -r ../../dev.nekoare.tex-col-adjuster-v${{ steps.version.outputs.version }}.zip . \
            -x "*.Zone.Identifier"
          cd ../..
          echo "Created ZIP file: dev.nekoare.tex-col-adjuster-v${{ steps.version.outputs.version }}.zip"
          
      - name: Calculate ZIP hash and update index.json
        run: |
          ZIP_NAME="dev.nekoare.tex-col-adjuster-v${{ steps.version.outputs.version }}.zip"
          ZIP_HASH=$(sha256sum "$ZIP_NAME" | cut -d' ' -f1)
          echo "Generated ZIP hash for v${{ steps.version.outputs.version }}: $ZIP_HASH"
          
          # Validate that index.json exists and is valid
          if ! jq empty index.json; then
            echo "ERROR: index.json is not valid JSON"
            exit 1
          fi

          # 旧キー "1.2" を削除（存在すれば）
          tmpfile=$(mktemp)
          jq 'del(.packages["dev.nekoare.tex-col-adjuster"].versions["1.2"])' index.json > "$tmpfile" && mv "$tmpfile" index.json
          
          # Use jq to directly create and insert the new version entry
          jq \
            --arg version "${{ steps.version.outputs.version }}" \
            --arg hash "$ZIP_HASH" \
            --arg url "https://nekoare.github.io/texture-color-adjuster/$ZIP_NAME" \
            '.packages["dev.nekoare.tex-col-adjuster"].versions[$version] = {
              "name": "dev.nekoare.tex-col-adjuster",
              "displayName": "Texture Color Adjuster",
              "version": $version,
              "description": "Unity Editor extension for advanced texture color adjustment with support for various color spaces and intelligent color manipulation algorithms.",
              "unity": "2022.3",
              "unityRelease": "0f1",
              "author": {
                "name": "nekoare",
                "url": "https://github.com/nekoare"
              },
              "changelogUrl": "https://github.com/nekoare/texture-color-adjuster/blob/main/CHANGELOG.md",
              "documentationUrl": "https://github.com/nekoare/texture-color-adjuster/blob/main/README.md",
              "licenseUrl": "https://github.com/nekoare/texture-color-adjuster/blob/main/LICENSE",
              "vpmDependencies": {},
              "keywords": [
                "texture",
                "color",
                "adjustment",
                "unity",
                "editor",
                "image processing",
                "color matching",
                "lab color space"
              ],
              "url": $url,
              "zipSHA256": $hash
            }' index.json > updated_index.json
          
          # Validate the updated JSON before replacing
          if jq empty updated_index.json; then
            mv updated_index.json index.json
            echo "Successfully updated index.json with new version ${{ steps.version.outputs.version }}"
          else
            echo "ERROR: Generated JSON is invalid"
            cat updated_index.json
            exit 1
          fi
          
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
